### 先来说一下技术方面我要掌握的东西吧
1. linux系统
	1.1 linux基础命令的掌握
	1.2 shell脚本
	1.3 linux系统的深度理解
2. Python
	1.1 python基础知识语法
	1.2 python基本库的用法掌握
	1.3 python高级特性
	1.4 能写一些小项目
	1.5 源码要能看得懂
3. Java：先不急，等我能独立完成python项目的时候才是我开始学习Java的时候
4. vim：作为一个工具，vim还是很重要的，基础的操作必须要明白
5. sublime text：也是一个可以尝试去好好利用的工具，很炫酷，要结合markdown使用
6. markdown：写文档用，无论是技术文档还是笔记都能用得着，基本的语法还是要熟练掌握
7. 网络编程：tcp/ip方面的东西还是要搞明白的，达到能够独立开发一个个人博客的程度
8. MySQL：查询已经练得不错，接下来要全面了解，反正结合项目去做就
9. 编码速度：目前就用两个练习一直练，不过也要去更新一下方法，以提高练习的效率

我计划中的核心能力（按优先级从高到低排序）：

1. Python编程能力
2. Linux系统的能力
3. 联结能力：完成大型项目所必须的一些知识和能力，比如网络编程相关的
3. 未来的Java学习
4. 其他周边能力
5. 工具使用能力

所有的能力，最好是通过实践去进行，实践的最高层次是项目，项目能够加深知识的记忆、理解和联结，是外部存储内部化以及显性记忆结构化的最好方法，也是方法论向底层沉淀的最好手段（这里的很多方法其实是能够抽象出一个方法论，但是它们都在不断地练习过程当中沉淀到底层去了，但这不意味着不需要建立顶层的方法论体系）
伴随着实践的同时，顶层的方法论也必须逐步建立起来，最好的情况是两条线是同步的，这样是话就不会产生底层混乱的情况，也有助于自己去向更高的层面发展。
所以我最理想的联系方式是项目与基础理论同步，不仅要去实践、还要去挖掘理论、更要去深度思考，一个很好的例子是光知道怎么写命令没啥用，只有当我真正理解这条命令之后才能提高它的效用，而光理解也没啥用，缺乏实践一方面使得你的理解是有瑕疵不全面的，另一方面对你的刺激不够，有碍你长时间的记忆，只有理解和实践相互作用才是最高效的。

### 关于学习计划
现阶段我的注重点第一是Python，第二则是Linux，反正不管是什么都用实践来推送，接下来详细说一下吧

1. Python的学习首先进行一些小实践，包括实验楼里面的基础项目（跟着写），github上的一些习题，其次是Python语法和特性的深度认知，这两步同时去做
2. 网络编程方面最近开始接触起来，等时机成熟了，使用Python进行网络编程
3. Linux的话现在每天学一些，优化自己的不足之处，跟着那个怎样才算入门Linux的回答走，争取做一些小东西来进行推动
4. 等我的Python神功小成之后，开始接触小型项目，阅读源码等
5. 等我的Python神功大成之后，开始学Java，这时候基本很多问题都能用python解决了
6. Linux接触得差不多了的时候开始搞一些脚本什么的
7. Java基础的学完还是要看一些C的，不会C可不行啊

### 文档体系整理












